#include "states.h"

//---- INSERTION SORT ALGORITHM ----//
void sort_array(uint8_t array[],uint8_t size){
    uint8_t i,j,temp;

    for(i=0;i<size;i++){
        for(j=0;j<i+1;j++){
            if(array[j]>array[i]){
                temp=array[i];
                array[i]=array[j];
                array[j]=temp;
            }
        }
    }
}


void print_array(uint8_t array[],uint8_t size){
	insertion(array,size);
	uint8_t i;
	for(i=0;i<size;i++){
		printf("%d. %d\n",i,array[i]);
	}
}

uint8_t find_median(uint8_t array[],uint8_t size){
	insertion(array,size);
	return array[(size/2)];
}

uint32_t find_mean(uint8_t array[],uint8_t size){
	insertion(array,size);
	uint32_t buf=0;uint8_t i;
	for(i=0;i<size;i++){
		buf+=array[i];
	}
	return (buf/size);
}

uint8_t find_minimum(uint8_t array[],uint8_t size){
	insertion(array,size);
	return array[0];
}

uint8_t find_maximum(uint8_t array[],uint8_t size){
	insertion(array,size);
	return array[size-1];
}

void print_statistics(uint8_t array[],uint8_t size){
	printf("%d\n%d\n",find_median(test, 40),find_mean(test,40));
	printf("%d\n%d\n",find_minimum(test, SIZE),find_maximum(test, SIZE));

}
